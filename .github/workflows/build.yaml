name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: read
jobs:
  run:
    name: Run Docker Examples
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
      - uses: graalvm/setup-graalvm@v1
        with:
          version: 'dev'
          java-version: '19'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'
      - name: Run musl setup
        run: |
          ./setup-musl.sh
      - name: Run Java Hello World
        run: |
          cd 1_java_hello_world
          #./build-hello-world.sh
      - name: Run Java jwebserver
        run: |
          cd 2_java_jwebserver
          #./build-all.sh
      - name: Run Spring-boot
        run: |
          cd 3_java_spring_boot
          #./build-spring-boot.sh

      - name: Run Node.js
        run: |
          cd 4_nodejs_express
          #./build-nodejs.sh

      - name: Run Python http.server
        run: |
          cd 5_python_http_server
          ./build-python.sh

      # Register Docker images
      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      # In previous scripts, the images are built
      #- name: Build Docker Image
      #  run: mvn clean spring-boot:build-image

      #- name: Push image to GitHub Container Registry
      #  run: |
      #    IMAGE_ID=ghcr.io/${{ github.repository_owner }}/jibber-benchmark:native-upx.0.0.1-SNAPSHOT
      #    docker push $IMAGE_ID
